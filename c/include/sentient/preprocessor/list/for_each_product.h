//
// Copyright (c) 2016-2019 Jin (jaehwanspin@gmail.com)
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
//
// Official repository: https://github.com/hyper-level-nerds/sentient
//

# ifndef SENTIENT_PREPROCESSOR_LIST_FOR_EACH_PRODUCT_H
# define SENTIENT_PREPROCESSOR_LIST_FOR_EACH_PRODUCT_H
#
# include <sentient/preprocessor/config/config.h>
# include <sentient/preprocessor/control/if.h>
# include <sentient/preprocessor/facilities/overload.h>
# include <sentient/preprocessor/list/adt.h>
# include <sentient/preprocessor/list/to_tuple.h>
# include <sentient/preprocessor/repetition/for.h>
# include <sentient/preprocessor/tuple/elem.h>
# include <sentient/preprocessor/tuple/to_list.h>
# include <sentient/preprocessor/tuple/rem.h>
# include <sentient/preprocessor/tuple/reverse.h>
# if SNT_PP_VARIADICS_MSVC
# include <sentient/preprocessor/cat.h>
# include <sentient/preprocessor/facilities/empty.h>
# endif
#
# /* SNT_PP_LIST_FOR_EACH_PRODUCT */
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_OV_2(macro, size, tuple) SNT_PP_LIST_FOR_EACH_PRODUCT_E(SNT_PP_FOR, macro, size, SNT_PP_TUPLE_TO_LIST(size, tuple))
# define SNT_PP_LIST_FOR_EACH_PRODUCT_OV_1(macro, tuple) SNT_PP_LIST_FOR_EACH_PRODUCT_E(SNT_PP_FOR, macro, SNT_PP_TUPLE_SIZE(tuple), SNT_PP_TUPLE_TO_LIST(tuple))
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_EDG()
#    if SNT_PP_VARIADICS_MSVC
#        define SNT_PP_LIST_FOR_EACH_PRODUCT(macro, ...) SNT_PP_CAT(SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_OV_,__VA_ARGS__)(macro,__VA_ARGS__),SNT_PP_EMPTY())
#    else
#        define SNT_PP_LIST_FOR_EACH_PRODUCT(macro, ...) SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_OV_,__VA_ARGS__)(macro,__VA_ARGS__)
#    endif
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT(macro, ...) SNT_PP_LIST_FOR_EACH_PRODUCT_Q(macro, __VA_ARGS__)
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_Q(macro, ...) SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_OV_,__VA_ARGS__)(macro,__VA_ARGS__)
# endif
#
# /* SNT_PP_LIST_FOR_EACH_PRODUCT_R */
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_R_OV_2(r, macro, size, tuple) SNT_PP_LIST_FOR_EACH_PRODUCT_E(SNT_PP_FOR ## r, macro, size, SNT_PP_TUPLE_TO_LIST(size, tuple))
# define SNT_PP_LIST_FOR_EACH_PRODUCT_R_OV_1(r, macro, tuple) SNT_PP_LIST_FOR_EACH_PRODUCT_E(SNT_PP_FOR ## r, macro, SNT_PP_TUPLE_SIZE(tuple), SNT_PP_TUPLE_TO_LIST(tuple))
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_EDG()
#    if SNT_PP_VARIADICS_MSVC
#        define SNT_PP_LIST_FOR_EACH_PRODUCT_R(r, macro, ...) SNT_PP_CAT(SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_R_OV_,__VA_ARGS__)(r, macro,__VA_ARGS__),SNT_PP_EMPTY())
#    else
#        define SNT_PP_LIST_FOR_EACH_PRODUCT_R(r, macro, ...) SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_R_OV_,__VA_ARGS__)(r, macro,__VA_ARGS__)
#    endif
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_R(r, macro, ...) SNT_PP_LIST_FOR_EACH_PRODUCT_R_Q(r, macro, __VA_ARGS__)
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_R_Q(r, macro, ...) SNT_PP_OVERLOAD(SNT_PP_LIST_FOR_EACH_PRODUCT_R_OV_,__VA_ARGS__)(r, macro,__VA_ARGS__)
# endif
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_EDG()
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_E(impl, macro, size, lists) impl((SNT_PP_LIST_FIRST(lists), SNT_PP_LIST_REST(lists), SNT_PP_NIL, macro, size), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_0)
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_E(impl, macro, size, lists) SNT_PP_LIST_FOR_EACH_PRODUCT_E_D(impl, macro, size, lists)
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_E_D(impl, macro, size, lists) impl((SNT_PP_LIST_FIRST(lists), SNT_PP_LIST_REST(lists), SNT_PP_NIL, macro, size), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_0)
# endif
#
# if SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_STRICT()
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_P(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_P_I data
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_P_I(a, b, res, macro, size) SNT_PP_LIST_IS_CONS(a)
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_P(r, data) SNT_PP_LIST_IS_CONS(SNT_PP_TUPLE_ELEM(5, 0, data))
# endif
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_MWCC()
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_O(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_O_I data
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_O_I(a, b, res, macro, size) (SNT_PP_LIST_REST(a), b, res, macro, size)
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_O(r, data) (SNT_PP_LIST_REST(SNT_PP_TUPLE_ELEM(5, 0, data)), SNT_PP_TUPLE_ELEM(5, 1, data), SNT_PP_TUPLE_ELEM(5, 2, data), SNT_PP_TUPLE_ELEM(5, 3, data), SNT_PP_TUPLE_ELEM(5, 4, data))
# endif
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_EDG()
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_I(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_I_I(r, SNT_PP_TUPLE_ELEM(5, 0, data), SNT_PP_TUPLE_ELEM(5, 1, data), SNT_PP_TUPLE_ELEM(5, 2, data), SNT_PP_TUPLE_ELEM(5, 3, data), SNT_PP_TUPLE_ELEM(5, 4, data))
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_I(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_I_D(r, SNT_PP_TUPLE_REM_5 data)
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_I_D(r, data_e) SNT_PP_LIST_FOR_EACH_PRODUCT_I_I(r, data_e)
# endif
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_I_I(r, a, b, res, macro, size) SNT_PP_LIST_FOR_EACH_PRODUCT_I_II(r, macro, SNT_PP_LIST_TO_TUPLE_R(r, (SNT_PP_LIST_FIRST(a), res)), size)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_I_II(r, macro, args, size) SNT_PP_LIST_FOR_EACH_PRODUCT_I_III(r, macro, args, size)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_I_III(r, macro, args, size) macro(r, SNT_PP_TUPLE_REVERSE(size, args))
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, i) SNT_PP_IF(SNT_PP_LIST_IS_CONS(SNT_PP_TUPLE_ELEM(5, 1, data)), SNT_PP_LIST_FOR_EACH_PRODUCT_N_ ## i, SNT_PP_LIST_FOR_EACH_PRODUCT_I)
#
# if ~SNT_PP_CONFIG_FLAGS() & SNT_PP_CONFIG_MWCC()
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_H(data) SNT_PP_LIST_FOR_EACH_PRODUCT_H_I data
# else
#    define SNT_PP_LIST_FOR_EACH_PRODUCT_H(data) SNT_PP_LIST_FOR_EACH_PRODUCT_H_I(SNT_PP_TUPLE_ELEM(5, 0, data), SNT_PP_TUPLE_ELEM(5, 1, data), SNT_PP_TUPLE_ELEM(5, 2, data), SNT_PP_TUPLE_ELEM(5, 3, data), SNT_PP_TUPLE_ELEM(5, 4, data))
# endif
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_H_I(a, b, res, macro, size) (SNT_PP_LIST_FIRST(b), SNT_PP_LIST_REST(b), (SNT_PP_LIST_FIRST(a), res), macro, size)
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_0(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 0)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_1(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 1)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_2(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 2)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_3(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 3)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_4(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 4)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_5(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 5)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_6(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 6)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_7(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 7)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_8(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 8)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_9(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 9)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_10(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 10)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_11(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 11)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_12(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 12)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_13(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 13)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_14(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 14)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_15(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 15)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_16(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 16)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_17(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 17)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_18(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 18)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_19(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 19)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_20(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 20)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_21(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 21)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_22(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 22)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_23(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 23)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_24(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 24)(r, data)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_M_25(r, data) SNT_PP_LIST_FOR_EACH_PRODUCT_C(data, 25)(r, data)
#
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_0(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_1)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_1(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_2)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_2(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_3)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_3(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_4)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_4(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_5)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_5(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_6)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_6(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_7)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_7(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_8)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_8(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_9)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_9(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_10)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_10(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_11)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_11(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_12)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_12(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_13)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_13(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_14)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_14(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_15)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_15(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_16)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_16(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_17)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_17(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_18)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_18(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_19)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_19(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_20)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_20(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_21)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_21(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_22)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_22(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_23)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_23(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_24)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_24(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_25)
# define SNT_PP_LIST_FOR_EACH_PRODUCT_N_25(r, data) SNT_PP_FOR_ ## r(SNT_PP_LIST_FOR_EACH_PRODUCT_H(data), SNT_PP_LIST_FOR_EACH_PRODUCT_P, SNT_PP_LIST_FOR_EACH_PRODUCT_O, SNT_PP_LIST_FOR_EACH_PRODUCT_M_26)
#
# endif
