!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jin/Workspace/net/sentient/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
COMPILER_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CXX_STD	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
C_VERSION	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION /;"	d	file:
C_VERSION	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION$/;"	d	file:
C_VERSION	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define C_VERSION /;"	d	file:
DEC	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
HEX	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
SENTIENT_API	cpp/include/sentient/core/api.hpp	/^#define SENTIENT_API$/;"	d
SENTIENT_COMPILER_AUTHOR	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_AUTHOR /;"	d
SENTIENT_COMPILER_BUILD_ENV	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_BUILD_ENV /;"	d
SENTIENT_COMPILER_BUILT_DATETIME	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_BUILT_DATETIME /;"	d
SENTIENT_COMPILER_LICENSE	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_LICENSE /;"	d
SENTIENT_COMPILER_NAME	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_NAME /;"	d
SENTIENT_COMPILER_USAGE	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_USAGE /;"	d
SENTIENT_COMPILER_VERSION	sentient_compiler/version.hpp	/^#define SENTIENT_COMPILER_VERSION /;"	d
SENTIENT_DEFINE_MODEL	c/include/sentient/core_c/reflection.h	/^#define SENTIENT_DEFINE_MODEL(/;"	d
SENTIENT_DEFINE_MODEL	cpp/include/sentient/core/define_model.hpp	/^#define SENTIENT_DEFINE_MODEL /;"	d
SENTIENT_DEFINE_MODEL_IMPL	c/include/sentient/core_c/reflection.h	/^#define SENTIENT_DEFINE_MODEL_IMPL(/;"	d
SENTIENT_DEFINE_STATIC_STRING_N	c/include/sentient/core_c/types.h	/^#define SENTIENT_DEFINE_STATIC_STRING_N(/;"	d
SENTIENT_INTERNAL_FOREACH0	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH0(/;"	d
SENTIENT_INTERNAL_FOREACH1	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH1(/;"	d
SENTIENT_INTERNAL_FOREACH2	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH2(/;"	d
SENTIENT_INTERNAL_FOREACH3	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH3(/;"	d
SENTIENT_INTERNAL_FOREACH4	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH4(/;"	d
SENTIENT_INTERNAL_FOREACH5	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH5(/;"	d
SENTIENT_INTERNAL_FOREACH6	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH6(/;"	d
SENTIENT_INTERNAL_FOREACH7	c/include/sentient/core_c/internal/foreach.h	/^#define SENTIENT_INTERNAL_FOREACH7(/;"	d
SENTIENT_PACK	cpp/include/sentient/core/api.hpp	/^#define SENTIENT_PACK(/;"	d
SIMULATE_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
STRINGIFY	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
__SENTIENT_CLI_COMPILER_FRAMEWORK_HPP__	sentient_compiler/framework.hpp	/^#define __SENTIENT_CLI_COMPILER_FRAMEWORK_HPP__$/;"	d
__SENTIENT_COMPILER_ARG_PARSER_HPP__	sentient_compiler/arg_parser.hpp	/^#define __SENTIENT_COMPILER_ARG_PARSER_HPP__$/;"	d
__SENTIENT_COMPILER_FILESYSTEM_HPP__	sentient_compiler/filesystem.hpp	/^#define __SENTIENT_COMPILER_FILESYSTEM_HPP__$/;"	d
__SENTIENT_COMPILER_GENERATION_TYPES_HPP__	sentient_compiler/generation_types.hpp	/^#define __SENTIENT_COMPILER_GENERATION_TYPES_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGES_HPP__	sentient_compiler/languages.hpp	/^#define __SENTIENT_COMPILER_LANGUAGES_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_CPP_GENERATOR_HPP__	sentient_compiler/language/cpp_generator.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_CPP_GENERATOR_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_CSHARP_GENERATOR_HPP__	sentient_compiler/language/csharp_generator.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_CSHARP_GENERATOR_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_GENERATOR_BASE_HPP__	sentient_compiler/language/generator_base.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_GENERATOR_BASE_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_JAVA_GENERATOR_HPP__	sentient_compiler/language/java_generator.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_JAVA_GENERATOR_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_PYTHON_GENERATOR_HPP__	sentient_compiler/language/python_generator.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_PYTHON_GENERATOR_HPP__$/;"	d
__SENTIENT_COMPILER_LANGUAGE_RUST_GENERATOR_HPP__	sentient_compiler/language/rust_generator.hpp	/^#define __SENTIENT_COMPILER_LANGUAGE_RUST_GENERATOR_HPP__$/;"	d
__SENTIENT_COMPILER_MODEL_PARSER_HPP__	sentient_compiler/model_parser.hpp	/^#define __SENTIENT_COMPILER_MODEL_PARSER_HPP__$/;"	d
__SENTIENT_COMPILER_PARSER_BASE_HPP__	sentient_compiler/parser_base.hpp	/^#define __SENTIENT_COMPILER_PARSER_BASE_HPP__$/;"	d
__SENTIENT_COMPILER_PARSE_RESULT_HPP__	sentient_compiler/parse_result.hpp	/^#define __SENTIENT_COMPILER_PARSE_RESULT_HPP__$/;"	d
__SENTIENT_COMPILER_VERSION_HPP__	sentient_compiler/version.hpp	/^#define __SENTIENT_COMPILER_VERSION_HPP__$/;"	d
__SENTIENT_COMPILER_VERSION_OUTPUT_HPP__	sentient_compiler/version_output.hpp	/^#define __SENTIENT_COMPILER_VERSION_OUTPUT_HPP__$/;"	d
__SENTIENT_CORE_API_HPP__	cpp/include/sentient/core/api.hpp	/^#define __SENTIENT_CORE_API_HPP__$/;"	d
__SENTIENT_CORE_C_H__	c/include/sentient/core_c.h	/^#define __SENTIENT_CORE_C_H__$/;"	d
__SENTIENT_CORE_C_INTERNAL_FOREACH_H__	c/include/sentient/core_c/internal/foreach.h	/^#define __SENTIENT_CORE_C_INTERNAL_FOREACH_H__$/;"	d
__SENTIENT_CORE_C_REFLECTION_H__	c/include/sentient/core_c/reflection.h	/^#define __SENTIENT_CORE_C_REFLECTION_H__$/;"	d
__SENTIENT_CORE_C_TYPES_H__	c/include/sentient/core_c/types.h	/^#define __SENTIENT_CORE_C_TYPES_H__$/;"	d
__SENTIENT_CORE_DATETIME_HPP__	cpp/include/sentient/core/datetime.hpp	/^#define __SENTIENT_CORE_DATETIME_HPP__$/;"	d
__SENTIENT_CORE_DEFINE_STRUCT_HPP__	cpp/include/sentient/core/define_model.hpp	/^#define __SENTIENT_CORE_DEFINE_STRUCT_HPP__$/;"	d
__SENTIENT_CORE_HPP__	cpp/include/sentient/core.hpp	/^#define __SENTIENT_CORE_HPP__$/;"	d
__SENTIENT_CORE_OBJECT_POOL_HPP__	cpp/include/sentient/core/object_pool.hpp	/^#define __SENTIENT_CORE_OBJECT_POOL_HPP__$/;"	d
__SENTIENT_CORE_PROTOCOL_HPP__	cpp/include/sentient/core/protocol.hpp	/^#define __SENTIENT_CORE_PROTOCOL_HPP__$/;"	d
__SENTIENT_CORE_SERIALIZATION_HPP__	cpp/include/sentient/core/serialization.hpp	/^#define __SENTIENT_CORE_SERIALIZATION_HPP__$/;"	d
__SENTIENT_CORE_STRING_HPP__	cpp/include/sentient/core/string.hpp	/^#define __SENTIENT_CORE_STRING_HPP__$/;"	d
__SENTIENT_CORE_TYPES_HPP__	cpp/include/sentient/core/types.hpp	/^#define __SENTIENT_CORE_TYPES_HPP__$/;"	d
__SENTIENT_CORE_TYPE_TRAITS_HPP__	cpp/include/sentient/core/type_traits.hpp	/^#define __SENTIENT_CORE_TYPE_TRAITS_HPP__$/;"	d
__SENTIENT_SENTIENT_HPP__	cpp/include/sentient/sentient.hpp	/^#define __SENTIENT_SENTIENT_HPP__$/;"	d
__SENTIENT_SENTIENT_H__	c/include/sentient/sentient.h	/^#define __SENTIENT_SENTIENT_H__$/;"	d
__anon95f00ea10102	cpp/include/sentient/core/object_pool.hpp	/^            this->all_returned_condvar_.wait(lk, [&]() {$/;"	f	function:sentient::object_pool::~object_pool	file:
__has_include	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^#  define __has_include(/;"	d	file:
__has_include	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define __has_include(/;"	d	file:
add_options	sentient_compiler/arg_parser.cpp	/^popts::options_description_easy_init arg_parser::add_options()$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:popts::options_description_easy_init
add_positional_option	sentient_compiler/arg_parser.cpp	/^    arg_parser::add_positional_option(const char *name, int max_count)$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:popts::positional_options_description &
all_returned_condvar_	cpp/include/sentient/core/object_pool.hpp	/^    std::condition_variable all_returned_condvar_;$/;"	m	class:sentient::object_pool	typeref:typename:std::condition_variable
all_returned_mtx_	cpp/include/sentient/core/object_pool.hpp	/^    std::mutex              all_returned_mtx_;$/;"	m	class:sentient::object_pool	typeref:typename:std::mutex
arg_parser	sentient_compiler/arg_parser.cpp	/^arg_parser::arg_parser(const std::string& opts_title) :$/;"	f	class:sentient::compiler::arg_parser
arg_parser	sentient_compiler/arg_parser.hpp	/^class arg_parser$/;"	c	namespace:sentient::compiler
argh_	sentient_compiler/framework.hpp	/^    arg_parser argh_;$/;"	m	class:sentient::compiler::framework	typeref:typename:arg_parser
array_t	cpp/include/sentient/core/types.hpp	/^using array_t = _Tp[_Size];$/;"	t	namespace:sentient	typeref:typename:_Tp[_Size]
ascii8_t	cpp/include/sentient/core/types.hpp	/^using ascii8_t = array_t<ascii_t, _Size>;$/;"	t	namespace:sentient	typeref:typename:array_t<ascii_t,_Size>
ascii_t	cpp/include/sentient/core/types.hpp	/^using ascii_t = char;$/;"	t	namespace:sentient	typeref:typename:char
attrs	cpp/include/sentient/core/protocol.hpp	/^namespace attrs$/;"	n	namespace:sentient
available	cpp/include/sentient/core/object_pool.hpp	/^    inline bool available()$/;"	f	class:sentient::object_pool	typeref:typename:bool
b8_t	cpp/include/sentient/core/types.hpp	/^using b8_t = bool;$/;"	t	namespace:sentient	typeref:typename:bool
base_type	cpp/include/sentient/core/type_traits.hpp	/^{ using base_type = sentient_model_attr; };$/;"	t	struct:sentient::type_traits::sentient_model_attr	typeref:typename:sentient_model_attr
basic_string	cpp/include/sentient/core/string.hpp	/^struct basic_string$/;"	s	namespace:sentient
byte_array_t	cpp/include/sentient/core/types.hpp	/^using byte_array_t = std::unique_ptr<std::byte[], _Deleter>;$/;"	t	namespace:sentient	typeref:typename:std::unique_ptr<std::byte[],_Deleter>
byte_buffer_t	cpp/include/sentient/core/types.hpp	/^using byte_buffer_t = std::pair<byte_array_t<_Deleter>, size_t>;$/;"	t	namespace:sentient	typeref:typename:std::pair<byte_array_t<_Deleter>,size_t>
c	sentient_compiler/languages.hpp	/^    c,$/;"	e	enum:sentient::compiler::languages
capacity	cpp/include/sentient/core/object_pool.hpp	/^    inline const size_t capacity()$/;"	f	class:sentient::object_pool	typeref:typename:const size_t
capacity_	cpp/include/sentient/core/object_pool.hpp	/^    std::atomic_size_t      capacity_;$/;"	m	class:sentient::object_pool	typeref:typename:std::atomic_size_t
command_code_type	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_command_code { using command_code_type = _Tp; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_command_code	typeref:typename:_Tp
compiler	sentient_compiler/arg_parser.cpp	/^namespace compiler$/;"	n	namespace:sentient	file:
compiler	sentient_compiler/arg_parser.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/filesystem.cpp	/^namespace compiler$/;"	n	namespace:sentient	file:
compiler	sentient_compiler/filesystem.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/framework.cpp	/^namespace compiler$/;"	n	namespace:sentient	file:
compiler	sentient_compiler/framework.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/generation_types.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/language/generator_base.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/languages.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/model_parser.cpp	/^namespace compiler$/;"	n	namespace:sentient	file:
compiler	sentient_compiler/model_parser.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/parse_result.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/parser_base.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/version.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler	sentient_compiler/version_output.cpp	/^namespace compiler$/;"	n	namespace:sentient	file:
compiler	sentient_compiler/version_output.hpp	/^namespace compiler$/;"	n	namespace:sentient
compiler_author	sentient_compiler/version.hpp	/^constexpr const char* compiler_author = SENTIENT_COMPILER_AUTHOR;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_build_env	sentient_compiler/version.hpp	/^constexpr const char* compiler_build_env = SENTIENT_COMPILER_BUILD_ENV;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_built_date	sentient_compiler/version.hpp	/^constexpr const char* compiler_built_date = SENTIENT_COMPILER_BUILT_DATETIME;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_license	sentient_compiler/version.hpp	/^constexpr const char* compiler_license = SENTIENT_COMPILER_LICENSE;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_name	sentient_compiler/version.hpp	/^constexpr const char* compiler_name = SENTIENT_COMPILER_NAME;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_path	sentient_compiler/filesystem.cpp	/^std::filesystem::path compiler_path()$/;"	f	namespace:sentient::compiler	typeref:typename:std::filesystem::path
compiler_usage	sentient_compiler/version.hpp	/^constexpr const char* compiler_usage = SENTIENT_COMPILER_USAGE;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
compiler_version	sentient_compiler/version.hpp	/^constexpr const char* compiler_version = SENTIENT_COMPILER_VERSION;$/;"	v	namespace:sentient::compiler	typeref:typename:const char *
concepts	cpp/include/sentient/core/type_traits.hpp	/^namespace concepts$/;"	n	namespace:sentient::type_traits
const	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
cplusplus	sentient_compiler/languages.hpp	/^    cplusplus,$/;"	e	enum:sentient::compiler::languages
crc16_t	cpp/include/sentient/core/types.hpp	/^using crc16_t = uint16_t;$/;"	t	namespace:sentient	typeref:typename:uint16_t
crc32_t	cpp/include/sentient/core/types.hpp	/^using crc32_t = uint32_t;$/;"	t	namespace:sentient	typeref:typename:uint32_t
crc8_t	cpp/include/sentient/core/types.hpp	/^using crc8_t = uint8_t;$/;"	t	namespace:sentient	typeref:typename:uint8_t
crc_type	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_crc { using crc_type = _Tp; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_crc	typeref:typename:_Tp
csharp	sentient_compiler/languages.hpp	/^    csharp,$/;"	e	enum:sentient::compiler::languages
datetime128	cpp/include/sentient/core/datetime.hpp	/^struct datetime128$/;"	s	namespace:sentient
day	cpp/include/sentient/core/datetime.hpp	/^	u32_t day : 5;     \/* [0-31] *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:5
day	cpp/include/sentient/core/datetime.hpp	/^	u8_t day;$/;"	m	struct:sentient::datetime128	typeref:typename:u8_t
dbms_compatible_attr	cpp/include/sentient/core/type_traits.hpp	/^struct dbms_compatible_attr : sentient_model_attr$/;"	s	namespace:sentient::type_traits
dbms_compatible_type	cpp/include/sentient/core/type_traits.hpp	/^	using dbms_compatible_type = _Derived;$/;"	t	struct:sentient::type_traits::dbms_compatible_attr	typeref:typename:_Derived
dbms_pk_idx_value	cpp/include/sentient/core/type_traits.hpp	/^    static constexpr size_t dbms_pk_idx_value = _PkIdx;$/;"	m	struct:sentient::type_traits::dbms_compatible_attr	typeref:typename:size_t
dynamic_model_attr	cpp/include/sentient/core/type_traits.hpp	/^struct dynamic_model_attr : sentient_model_attr$/;"	s	namespace:sentient::type_traits
element_type	cpp/include/sentient/core/object_pool.hpp	/^    using element_type = value_type;$/;"	t	class:sentient::object_pool	typeref:typename:value_type
error_message_	sentient_compiler/arg_parser.hpp	/^    std::string error_message_;$/;"	m	class:sentient::compiler::arg_parser	typeref:typename:std::string
etx_type	cpp/include/sentient/core/type_traits.hpp	/^    using etx_type = _Tp; static constexpr etx_type etx_value = _Val; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_etx	typeref:typename:_Tp
etx_value	cpp/include/sentient/core/type_traits.hpp	/^    using etx_type = _Tp; static constexpr etx_type etx_value = _Val; };$/;"	m	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_etx	typeref:typename:etx_type
example	cpp/src/examples/cpp_model_creation/main.cpp	/^namespace example$/;"	n	file:
execute	sentient_compiler/framework.cpp	/^int framework::execute()$/;"	f	class:sentient::compiler::framework	typeref:typename:int
f32_t	cpp/include/sentient/core/types.hpp	/^using f32_t = float;$/;"	t	namespace:sentient	typeref:typename:float
f64_t	cpp/include/sentient/core/types.hpp	/^using f64_t = double;$/;"	t	namespace:sentient	typeref:typename:double
footer_type	cpp/include/sentient/core/protocol.hpp	/^    using footer_type = _FooterType;$/;"	t	struct:sentient::protocol	typeref:typename:_FooterType
framework	sentient_compiler/framework.cpp	/^framework::framework(int argc, char** argv) :$/;"	f	class:sentient::compiler::framework
framework	sentient_compiler/framework.hpp	/^class framework$/;"	c	namespace:sentient::compiler
from	cpp/include/sentient/core/protocol.hpp	/^struct from { using from_type = _Tp; };$/;"	s	namespace:sentient::attrs
from_tm	cpp/include/sentient/core/datetime.hpp	/^    static subcentury_datetime32 from_tm(const std::tm& tm)$/;"	f	struct:sentient::subcentury_datetime32	typeref:typename:subcentury_datetime32
from_type	cpp/include/sentient/core/protocol.hpp	/^struct from { using from_type = _Tp; };$/;"	t	struct:sentient::attrs::from	typeref:typename:_Tp
from_type	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_from { using from_type = _Tp; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_from	typeref:typename:_Tp
full	cpp/include/sentient/core/object_pool.hpp	/^    inline bool full()$/;"	f	class:sentient::object_pool	typeref:typename:bool
generation_type	sentient_compiler/generation_types.hpp	/^using generation_type = uint8_t;$/;"	t	namespace:sentient::compiler	typeref:typename:uint8_t
generation_types	sentient_compiler/generation_types.hpp	/^namespace generation_types$/;"	n	namespace:sentient::compiler
generator_base	sentient_compiler/language/generator_base.hpp	/^class generator_base$/;"	c	namespace:sentient::compiler
get_object	cpp/include/sentient/core/object_pool.hpp	/^    smart_pointer_type get_object()$/;"	f	class:sentient::object_pool	typeref:typename:smart_pointer_type
header_type	cpp/include/sentient/core/protocol.hpp	/^    using header_type = _HeaderType;$/;"	t	struct:sentient::protocol	typeref:typename:_HeaderType
hour	cpp/include/sentient/core/datetime.hpp	/^	u8_t hour;$/;"	m	struct:sentient::datetime128	typeref:typename:u8_t
hours	cpp/include/sentient/core/datetime.hpp	/^	u32_t hours : 5;   \/* [0-11] *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:5
i16_t	cpp/include/sentient/core/types.hpp	/^using i16_t = int16_t;$/;"	t	namespace:sentient	typeref:typename:int16_t
i32_t	cpp/include/sentient/core/types.hpp	/^using i32_t = int32_t;$/;"	t	namespace:sentient	typeref:typename:int32_t
i64_t	cpp/include/sentient/core/types.hpp	/^using i64_t = int64_t;$/;"	t	namespace:sentient	typeref:typename:int64_t
i8_t	cpp/include/sentient/core/types.hpp	/^using i8_t = int8_t;$/;"	t	namespace:sentient	typeref:typename:int8_t
info_arch	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_extensions_default	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_extensions_default	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
initialize	sentient_compiler/framework.cpp	/^void framework::initialize(int argc, char** argv)$/;"	f	class:sentient::compiler::framework	typeref:typename:void
internal	cpp/include/sentient/core/datetime.hpp	/^namespace internal$/;"	n	namespace:sentient
internal	cpp/include/sentient/core/type_traits.hpp	/^namespace internal$/;"	n	namespace:sentient::type_traits
is_datetime	cpp/include/sentient/core/type_traits.hpp	/^struct is_datetime : std::false_type {};$/;"	s	namespace:sentient::type_traits
is_datetime	cpp/include/sentient/core/type_traits.hpp	/^struct is_datetime<$/;"	s	namespace:sentient::type_traits
is_datetime_v	cpp/include/sentient/core/type_traits.hpp	/^inline constexpr bool is_datetime_v = is_datetime<_Model, _Tp>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_dbms_compatible_model	cpp/include/sentient/core/type_traits.hpp	/^struct is_dbms_compatible_model : std::false_type { };$/;"	s	namespace:sentient::type_traits
is_dbms_compatible_model	cpp/include/sentient/core/type_traits.hpp	/^struct is_dbms_compatible_model<$/;"	s	namespace:sentient::type_traits
is_dbms_compatible_model_v	cpp/include/sentient/core/type_traits.hpp	/^constexpr inline bool is_dbms_compatible_model_v = is_dbms_compatible_model<_Model, _Tp>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_dynamic_model	cpp/include/sentient/core/type_traits.hpp	/^struct is_dynamic_model :$/;"	s	namespace:sentient::type_traits
is_dynamic_model_v	cpp/include/sentient/core/type_traits.hpp	/^constexpr inline bool is_dynamic_model_v = is_dynamic_model<_Model>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_sentient_model	cpp/include/sentient/core/type_traits.hpp	/^struct is_sentient_model :$/;"	s	namespace:sentient::type_traits
is_sentient_model_v	cpp/include/sentient/core/type_traits.hpp	/^constexpr inline bool is_sentient_model_v = is_sentient_model<_Model>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_static_model	cpp/include/sentient/core/type_traits.hpp	/^struct is_static_model :$/;"	s	namespace:sentient::type_traits
is_static_model_v	cpp/include/sentient/core/type_traits.hpp	/^constexpr inline bool is_static_model_v = is_static_model<_Model>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_stl_spec_container	cpp/include/sentient/core/type_traits.hpp	/^struct is_stl_spec_container : std::false_type {};$/;"	s	namespace:sentient::type_traits
is_stl_spec_container	cpp/include/sentient/core/type_traits.hpp	/^struct is_stl_spec_container<$/;"	s	namespace:sentient::type_traits
is_stl_spec_container_v	cpp/include/sentient/core/type_traits.hpp	/^constexpr inline bool is_stl_spec_container_v = is_stl_spec_container<_Tp, _Up>::value;$/;"	v	namespace:sentient::type_traits	typeref:typename:bool
is_stl_spec_string	cpp/include/sentient/core/type_traits.hpp	/^struct is_stl_spec_string : std::false_type { };$/;"	s	namespace:sentient::type_traits
is_type_helper	cpp/include/sentient/core/type_traits.hpp	/^struct is_type_helper {};$/;"	s	namespace:sentient::type_traits::internal
lang_	sentient_compiler/framework.hpp	/^    languages lang_;$/;"	m	class:sentient::compiler::framework	typeref:typename:languages
languages	sentient_compiler/languages.hpp	/^enum class languages : uint8_t$/;"	g	namespace:sentient::compiler	typeref:typename:uint8_t
main	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	c/src/examples/c_model_creation/main.c	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	cpp/src/examples/cpp_model_creation/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	sentient_compiler/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
make_byte_buffer	cpp/include/sentient/core/serialization.hpp	/^byte_buffer_t make_byte_buffer(const _Model& model)$/;"	f	namespace:sentient	typeref:typename:byte_buffer_t
make_byte_buffer	cpp/include/sentient/core/serialization.hpp	/^byte_buffer_t make_byte_buffer(const _Tp& model)$/;"	f	namespace:sentient	typeref:typename:byte_buffer_t
make_unique_model	cpp/include/sentient/core/serialization.hpp	/^std::unique_ptr<_Model, _Delete> make_unique_model(const byte_buffer_t& byte_buffer)$/;"	f	namespace:sentient	typeref:typename:std::unique_ptr<_Model,_Delete>
message_based_protocols	cpp/include/sentient/core/type_traits.hpp	/^namespace message_based_protocols$/;"	n	namespace:sentient::type_traits::protocol_traits
microseconds	cpp/include/sentient/core/datetime.hpp	/^	u32_t microseconds;$/;"	m	struct:sentient::subcentury_datetime64	typeref:typename:u32_t
minute	cpp/include/sentient/core/datetime.hpp	/^	u8_t minute;$/;"	m	struct:sentient::datetime128	typeref:typename:u8_t
minutes	cpp/include/sentient/core/datetime.hpp	/^	u32_t minutes : 6; \/* [0-59] *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:6
model	sentient_compiler/generation_types.hpp	/^    constexpr generation_type model = 2;$/;"	v	namespace:sentient::compiler::generation_types	typeref:typename:generation_type
model_flexiblity_attr_type	cpp/include/sentient/core/type_traits.hpp	/^{ using model_flexiblity_attr_type = dynamic_model_attr; };$/;"	t	struct:sentient::type_traits::dynamic_model_attr	typeref:typename:dynamic_model_attr
model_flexiblity_attr_type	cpp/include/sentient/core/type_traits.hpp	/^{ using model_flexiblity_attr_type = static_model_attr; };$/;"	t	struct:sentient::type_traits::static_model_attr	typeref:typename:static_model_attr
model_or_protocol_	sentient_compiler/framework.hpp	/^    bool model_or_protocol_;$/;"	m	class:sentient::compiler::framework	typeref:typename:bool
model_parser	sentient_compiler/model_parser.hpp	/^class model_parser : public parser_base$/;"	c	namespace:sentient::compiler
month	cpp/include/sentient/core/datetime.hpp	/^	u32_t month : 4;   \/* [0-11] *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:4
month	cpp/include/sentient/core/datetime.hpp	/^	u8_t month;$/;"	m	struct:sentient::datetime128	typeref:typename:u8_t
nanosecond	cpp/include/sentient/core/datetime.hpp	/^	u64_t nanosecond;$/;"	m	struct:sentient::datetime128	typeref:typename:u64_t
object_pool	cpp/include/sentient/core/object_pool.hpp	/^    object_pool(const object_pool& other)$/;"	f	class:sentient::object_pool
object_pool	cpp/include/sentient/core/object_pool.hpp	/^    object_pool(size_t capacity, _Args... default_constructor_args) :$/;"	f	class:sentient::object_pool
object_pool	cpp/include/sentient/core/object_pool.hpp	/^class object_pool$/;"	c	namespace:sentient
operator () 	cpp/include/sentient/core/object_pool.hpp	/^        void operator() (pointer_type t) const$/;"	f	struct:sentient::object_pool::pool_deleter	typeref:typename:void
operator boost::gregorian::date	cpp/include/sentient/core/datetime.hpp	/^    operator boost::gregorian::date()$/;"	f	struct:sentient::subcentury_datetime32
operator boost::posix_time::ptime	cpp/include/sentient/core/datetime.hpp	/^    operator boost::posix_time::ptime()$/;"	f	struct:sentient::subcentury_datetime32
operator std::tm	cpp/include/sentient/core/datetime.hpp	/^    operator std::tm()$/;"	f	struct:sentient::subcentury_datetime32
opts_desc	sentient_compiler/arg_parser.cpp	/^popts::options_description& arg_parser::opts_desc()$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:popts::options_description &
opts_desc_	sentient_compiler/arg_parser.hpp	/^    boost::program_options::options_description opts_desc_;$/;"	m	class:sentient::compiler::arg_parser	typeref:typename:boost::program_options::options_description
parse	sentient_compiler/arg_parser.cpp	/^void arg_parser::parse(int argc, char** argv)$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:void
parse_result	sentient_compiler/parse_result.hpp	/^struct parse_result$/;"	s	namespace:sentient::compiler
parser_base	sentient_compiler/parser_base.hpp	/^class parser_base$/;"	c	namespace:sentient::compiler
pointer_type	cpp/include/sentient/core/object_pool.hpp	/^    using pointer_type = std::add_pointer_t<value_type>;$/;"	t	class:sentient::object_pool	typeref:typename:std::add_pointer_t<value_type>
pool_	cpp/include/sentient/core/object_pool.hpp	/^        pool_ptr pool_;$/;"	m	struct:sentient::object_pool::pool_deleter	typeref:typename:pool_ptr
pool_	cpp/include/sentient/core/object_pool.hpp	/^    pool_type               pool_;$/;"	m	class:sentient::object_pool	typeref:typename:pool_type
pool_deleter	cpp/include/sentient/core/object_pool.hpp	/^        pool_deleter(pool_ptr pool) :$/;"	f	struct:sentient::object_pool::pool_deleter
pool_deleter	cpp/include/sentient/core/object_pool.hpp	/^    struct pool_deleter$/;"	s	class:sentient::object_pool
pool_ptr	cpp/include/sentient/core/object_pool.hpp	/^        using pool_ptr = std::add_pointer_t<object_pool>;$/;"	t	struct:sentient::object_pool::pool_deleter	typeref:typename:std::add_pointer_t<object_pool>
pool_type	cpp/include/sentient/core/object_pool.hpp	/^    using pool_type = boost::lockfree::queue<pointer_type>;$/;"	t	class:sentient::object_pool	typeref:typename:boost::lockfree::queue<pointer_type>
pos_opts_desc_	sentient_compiler/arg_parser.hpp	/^    boost::program_options::positional_options_description pos_opts_desc_;$/;"	m	class:sentient::compiler::arg_parser	typeref:typename:boost::program_options::positional_options_description
protocol	cpp/include/sentient/core/protocol.hpp	/^struct protocol$/;"	s	namespace:sentient
protocol	sentient_compiler/generation_types.hpp	/^    constexpr generation_type protocol = 1;$/;"	v	namespace:sentient::compiler::generation_types	typeref:typename:generation_type
protocol_command_code	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_command_code { using command_code_type = _Tp; };$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_crc	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_crc { using crc_type = _Tp; };$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_etx	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_etx $/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_from	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_from { using from_type = _Tp; };$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_sequence_number	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_sequence_number { using sequence_number_type = _Tp; };$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_stx	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_stx$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_stx	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_stx$/;"	s	namespace:sentient::type_traits::protocol_traits::stream_based_protocols
protocol_to	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_to { using to_type = _Tp; };$/;"	s	namespace:sentient::type_traits::protocol_traits::message_based_protocols
protocol_traits	cpp/include/sentient/core/type_traits.hpp	/^namespace protocol_traits$/;"	n	namespace:sentient::type_traits
pt64_t	cpp/include/sentient/core/datetime.hpp	/^using pt64_t = u64_t;$/;"	t	namespace:sentient	typeref:typename:u64_t
ptree_	sentient_compiler/model_parser.hpp	/^    boost::property_tree::ptree ptree_;$/;"	m	class:sentient::compiler::model_parser	typeref:typename:boost::property_tree::ptree
qnxnto	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.23.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
result	sentient_compiler/parse_result.hpp	/^    bool        result;$/;"	m	struct:sentient::compiler::parse_result	typeref:typename:bool
result_message	sentient_compiler/parse_result.hpp	/^    std::string result_message;$/;"	m	struct:sentient::compiler::parse_result	typeref:typename:std::string
rust	sentient_compiler/languages.hpp	/^    rust,$/;"	e	enum:sentient::compiler::languages
scdt32_t	cpp/include/sentient/core/datetime.hpp	/^using scdt32_t = subcentury_datetime32<_ThisCentury>;$/;"	t	namespace:sentient	typeref:typename:subcentury_datetime32<_ThisCentury>
scdt64_t	cpp/include/sentient/core/datetime.hpp	/^using scdt64_t = subcentury_datetime64<_ThisCentury>;$/;"	t	namespace:sentient	typeref:typename:subcentury_datetime64<_ThisCentury>
second	cpp/include/sentient/core/datetime.hpp	/^	u8_t second;$/;"	m	struct:sentient::datetime128	typeref:typename:u8_t
seconds	cpp/include/sentient/core/datetime.hpp	/^	u32_t seconds : 5; \/* [0-29] 0-59 in 2-second intervals *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:5
sentient	cpp/include/sentient/core/datetime.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/object_pool.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/protocol.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/serialization.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/string.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/type_traits.hpp	/^namespace sentient$/;"	n
sentient	cpp/include/sentient/core/types.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/arg_parser.cpp	/^namespace sentient$/;"	n	file:
sentient	sentient_compiler/arg_parser.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/filesystem.cpp	/^namespace sentient$/;"	n	file:
sentient	sentient_compiler/filesystem.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/framework.cpp	/^namespace sentient$/;"	n	file:
sentient	sentient_compiler/framework.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/generation_types.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/language/generator_base.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/languages.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/model_parser.cpp	/^namespace sentient$/;"	n	file:
sentient	sentient_compiler/model_parser.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/parse_result.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/parser_base.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/version.hpp	/^namespace sentient$/;"	n
sentient	sentient_compiler/version_output.cpp	/^namespace sentient$/;"	n	file:
sentient	sentient_compiler/version_output.hpp	/^namespace sentient$/;"	n
sentient_model_attr	cpp/include/sentient/core/type_traits.hpp	/^struct sentient_model_attr$/;"	s	namespace:sentient::type_traits
sequence_number_type	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_sequence_number { using sequence_number_type = _Tp; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_sequence_number	typeref:typename:_Tp
size	cpp/include/sentient/core/object_pool.hpp	/^    inline const size_t size()$/;"	f	class:sentient::object_pool	typeref:typename:const size_t
size_	cpp/include/sentient/core/object_pool.hpp	/^    std::atomic_size_t      size_;$/;"	m	class:sentient::object_pool	typeref:typename:std::atomic_size_t
smart_pointer_type	cpp/include/sentient/core/object_pool.hpp	/^    using smart_pointer_type = _PtrType;$/;"	t	class:sentient::object_pool	typeref:typename:_PtrType
snt_f32	c/include/sentient/core_c/types.h	/^typedef float    snt_f32;$/;"	t	typeref:typename:float
snt_f64	c/include/sentient/core_c/types.h	/^typedef double   snt_f64;$/;"	t	typeref:typename:double
snt_i16	c/include/sentient/core_c/types.h	/^typedef int16_t  snt_i16;$/;"	t	typeref:typename:int16_t
snt_i32	c/include/sentient/core_c/types.h	/^typedef int32_t  snt_i32;$/;"	t	typeref:typename:int32_t
snt_i64	c/include/sentient/core_c/types.h	/^typedef int64_t  snt_i64;$/;"	t	typeref:typename:int64_t
snt_i8	c/include/sentient/core_c/types.h	/^typedef int8_t   snt_i8;$/;"	t	typeref:typename:int8_t
snt_str16	c/include/sentient/core_c/types.h	/^typedef snt_i16  snt_str16;$/;"	t	typeref:typename:snt_i16
snt_str32	c/include/sentient/core_c/types.h	/^typedef snt_i32  snt_str32;$/;"	t	typeref:typename:snt_i32
snt_str8	c/include/sentient/core_c/types.h	/^typedef char     snt_str8;$/;"	t	typeref:typename:char
snt_u16	c/include/sentient/core_c/types.h	/^typedef uint16_t snt_u16;$/;"	t	typeref:typename:uint16_t
snt_u32	c/include/sentient/core_c/types.h	/^typedef uint32_t snt_u32;$/;"	t	typeref:typename:uint32_t
snt_u64	c/include/sentient/core_c/types.h	/^typedef uint64_t snt_u64;$/;"	t	typeref:typename:uint64_t
snt_u8	c/include/sentient/core_c/types.h	/^typedef uint8_t  snt_u8;$/;"	t	typeref:typename:uint8_t
static_model	cpp/src/examples/cpp_model_creation/main.cpp	/^struct static_model :$/;"	s	namespace:example	file:
static_model_attr	cpp/include/sentient/core/type_traits.hpp	/^struct static_model_attr : sentient_model_attr$/;"	s	namespace:sentient::type_traits
str16_t	cpp/include/sentient/core/types.hpp	/^using str16_t = array_t<char16_t, _Size>;$/;"	t	namespace:sentient	typeref:typename:array_t<char16_t,_Size>
str32_t	cpp/include/sentient/core/types.hpp	/^using str32_t = array_t<char32_t, _Size>;$/;"	t	namespace:sentient	typeref:typename:array_t<char32_t,_Size>
str8_t	cpp/include/sentient/core/types.hpp	/^using str8_t = array_t<char8_t, _Size>;$/;"	t	namespace:sentient	typeref:typename:array_t<char8_t,_Size>
stream_based_protocols	cpp/include/sentient/core/type_traits.hpp	/^namespace stream_based_protocols$/;"	n	namespace:sentient::type_traits::protocol_traits
stx_type	cpp/include/sentient/core/type_traits.hpp	/^{ using stx_type = _Tp; static constexpr stx_type stx_value = _Val; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_stx	typeref:typename:_Tp
stx_value	cpp/include/sentient/core/type_traits.hpp	/^{ static constexpr const char stx_value[sizeof...(_Stx)] = { (_Stx)... };  };$/;"	m	struct:sentient::type_traits::protocol_traits::stream_based_protocols::protocol_stx	typeref:typename:const char[]
stx_value	cpp/include/sentient/core/type_traits.hpp	/^{ using stx_type = _Tp; static constexpr stx_type stx_value = _Val; };$/;"	m	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_stx	typeref:typename:stx_type
subcentury_datetime32	cpp/include/sentient/core/datetime.hpp	/^struct subcentury_datetime32$/;"	s	namespace:sentient
subcentury_datetime64	cpp/include/sentient/core/datetime.hpp	/^struct subcentury_datetime64 : subcentury_datetime32<_ThisCentury>$/;"	s	namespace:sentient
subcentury_helper	cpp/include/sentient/core/datetime.hpp	/^    struct subcentury_helper$/;"	s	namespace:sentient::internal
success	sentient_compiler/arg_parser.cpp	/^bool arg_parser::success() const$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:bool
success_	sentient_compiler/arg_parser.hpp	/^    bool success_;$/;"	m	class:sentient::compiler::arg_parser	typeref:typename:bool
table_name_prefix	cpp/include/sentient/core/type_traits.hpp	/^	static constexpr const char table_name_prefix[sizeof...(_TableNamePrefix)] = { (_TableNamePrefi/;"	m	struct:sentient::type_traits::dbms_compatible_attr	typeref:typename:const char[]
this_century	cpp/include/sentient/core/datetime.hpp	/^    static constexpr u64_t this_century = _ThisCentury;$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u64_t
this_year	cpp/include/sentient/core/datetime.hpp	/^        static constexpr u64_t this_year = ((_ThisCentury - 1) * 100);$/;"	m	struct:sentient::internal::subcentury_helper	typeref:typename:u64_t
this_year	cpp/include/sentient/core/datetime.hpp	/^    static constexpr u64_t this_year =$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u64_t
tm_year_conversion_constant	cpp/include/sentient/core/datetime.hpp	/^    static constexpr int tm_year_conversion_constant = 1900;$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:int
to_type	cpp/include/sentient/core/type_traits.hpp	/^struct protocol_to { using to_type = _Tp; };$/;"	t	struct:sentient::type_traits::protocol_traits::message_based_protocols::protocol_to	typeref:typename:_Tp
type	cpp/include/sentient/core/object_pool.hpp	/^    using type = object_pool<_Tp, _PtrType>;$/;"	t	class:sentient::object_pool	typeref:typename:object_pool<_Tp,_PtrType>
type_traits	cpp/include/sentient/core/type_traits.hpp	/^namespace type_traits$/;"	n	namespace:sentient
u16_t	cpp/include/sentient/core/types.hpp	/^using u16_t = uint16_t;$/;"	t	namespace:sentient	typeref:typename:uint16_t
u32_t	cpp/include/sentient/core/types.hpp	/^using u32_t = uint32_t;$/;"	t	namespace:sentient	typeref:typename:uint32_t
u64_t	cpp/include/sentient/core/types.hpp	/^using u64_t = uint64_t;$/;"	t	namespace:sentient	typeref:typename:uint64_t
u8_t	cpp/include/sentient/core/types.hpp	/^using u8_t = uint8_t;$/;"	t	namespace:sentient	typeref:typename:uint8_t
value_type	cpp/include/sentient/core/object_pool.hpp	/^    using value_type = _Tp;$/;"	t	class:sentient::object_pool	typeref:typename:_Tp
vars_map	sentient_compiler/arg_parser.cpp	/^popts::variables_map& arg_parser::vars_map()$/;"	f	class:sentient::compiler::arg_parser	typeref:typename:popts::variables_map &
vars_map_	sentient_compiler/arg_parser.hpp	/^    boost::program_options::variables_map vars_map_;$/;"	m	class:sentient::compiler::arg_parser	typeref:typename:boost::program_options::variables_map
verbose_	sentient_compiler/framework.hpp	/^    bool verbose_;$/;"	m	class:sentient::compiler::framework	typeref:typename:bool
version_output	sentient_compiler/version_output.cpp	/^version_output::version_output(bool verbose)$/;"	f	class:sentient::compiler::version_output
version_output	sentient_compiler/version_output.hpp	/^class version_output$/;"	c	namespace:sentient::compiler
volatile	build/CMakeFiles/3.23.0/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
year	cpp/include/sentient/core/datetime.hpp	/^	u32_t year : 7;    \/* [0-99] a centry *\/$/;"	m	struct:sentient::subcentury_datetime32	typeref:typename:u32_t:7
year	cpp/include/sentient/core/datetime.hpp	/^	u64_t year;$/;"	m	struct:sentient::datetime128	typeref:typename:u64_t
~object_pool	cpp/include/sentient/core/object_pool.hpp	/^    virtual ~object_pool()$/;"	f	class:sentient::object_pool
